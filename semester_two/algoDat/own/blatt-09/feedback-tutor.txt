Aufgabe 1: 5/10
================================================================================
3/6 Funktion
0/2 Tests
2/2 Doku + Codequalität

Funktionalität gut, allerdings ist deine Laufzeit zu hoch - du fügst jedes Element in die PQ ein - damit du O(n log k) kriegst, musst du garantieren dass max. k Elemente in der PQ sind.

Aufgabe 2: 9/10
================================================================================
6/6 Funktion
1/2 Tests
2/2 Doku + Codequalität

Tests für Randfälle fehlen.

insert
--------------------------------------------------------------------------------
Laufzeit O(1)


getMin
--------------------------------------------------------------------------------
Laufzeit O(1)


deleteMin
--------------------------------------------------------------------------------
Laufzeit O(M)


changeKey
--------------------------------------------------------------------------------
Laufzeit O(1), wenn minKey dann O(M).


Platz
--------------------------------------------------------------------------------
O(maxKey - minKey + M)


Laufzeit für n Operationen
--------------------------------------------------------------------------------
O(n + M)

Sieht gut aus! Dass du nur die Buckets allokierst die tatsächlich verwendet werden ist zwar platzsparender, sorgt aber für mehr Laufzeit in insert() und deleteMin() (aber ein konstanter Faktor nur).


Allgemeines Feedback zu deinem Code:
================================================================================



Erfahrungen
================================================================================



Rückfragen
===========
Falls es Klärungsbedarf bezüglich der Benotung, des Feedbacks oder sonstigem gibt, stehe ich gerne für Rückfragen zur Verfügung.
E-mail: selgs@informatik.uni-freiburg.de
